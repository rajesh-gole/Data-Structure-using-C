#include <stdio.h>
#include<stdlib.h>
void Enque(int*,int);
void Deque(int*,int);
void Display(int*,int);
int rear=-1, front=-1;
void main()
{
    int a[30],max,i,ch;
    char c;
    printf("Enter the Max Size\n");
    scanf("%d",&max);
   do

   {
    printf("\n 1. Insert \n 2. Delete \n 3. Display \n 4. Exit\n");
    printf("Enter your Choice:\n");
    scanf("%d", &ch);
    switch(ch)
    {
        case 1 : Enque(a,max);
        break;
        case 2 : Deque(a,max);
        break;
        case 3 : Display(a,max);
        break;
        case 4 : exit(1);
        break;
        default: printf("Wrong Choice");
    }
    fflush(stdin);
    printf("\nDo you want to continue? press y/n\n");
    scanf("%c",&c);
   }
   while(c=='Y'||c=='y');
}

void Enque(int *a, int max)
{
    int data;
    if((rear==(max-1) && front==0)||(front==(rear+1)))
    {
        printf("Queue is Full\n");
        return;
    }
    else
   {
    	printf("Enter the data:\n");
       scanf("%d",&data);
        if (rear==-1 && front==-1)
        {
            front=rear=0;
            a[rear]=data;
            return;
        }
        else
        {
         if(rear==max-1&& front!=0)
         {
         	rear=0;
         	a[rear]=data;
         	return;
		 }
		 else
		 {
		 	rear++;
		 	a[rear]=data;
		 	return;
		 }
        }


    }
}

void Deque (int *a,int max)
{
    int data;
    if(rear==-1 && front== -1)
    {
        printf("Queue is Empty\n");
        return;
    }
    else
    {
        data=a[front];
        if(rear== front)
        {
            rear=-1;
            front=-1;
        }
        else
        {
            if (front == max-1)
            {
                front=0;
                //rear=0;
            }
            else
            {
                front++;
            }
        }
        printf("Deleted element is %d",data);
        return;
    }
}

void Display (int* a,int max)
{
	int i;
    if(front == -1)
    {
        printf("Queue is empty\n");
        return;
    }
    else
    {
        if(rear>=front)
        {
            for(i=front;i<=rear;i++)
                printf(" %d  ",a[i]);
        }
        else
        {
            for(i=front; i<= max-1; i++)
                printf(" %d  ",a[i]);
            for(i=0;i<=rear; i++)
                printf(" %d  ",a[i]);
        }
    }
}

