#include <stdio.h>
#include<malloc.h>
struct node
{
    int data;
    struct node *prev;
    struct node *next;
};
typedef struct node NODE;
NODE *head=NULL;
void ins_beg();
void ins_end();
void del_any_val();
void count();
void search();
void display();

main()
{
    int ch;
    char c;
    do{
        printf("\n Menu \n 1. Insert at the beginning\n 2. Insert at the end \n 3. delete any value\n 4. Count the no of nodes \n 5. Search\n 6. Display\n");
        printf("Enter your choice:\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1: ins_beg();
            break;
            case 2: ins_end();
            break;
            case 3: del_any_val();
            break;
            case 4: count();
            break;
            case 5: search();
            break;
            case 6: display();
            break;
            default: printf("Invalid Choice!");
        }
        fflush(stdin);
        printf("\n\nDo you want to continue?\n press  y for YES   n for NO:\n");
        scanf("%c",&c);
    }
    while(c=='Y'||c=='y');
}
void ins_beg()
{
    NODE *p;
    p=(NODE*)malloc(sizeof(NODE));
    printf("Enter the Data:\n");
    scanf("%d",&p->data);

    if(head==NULL)
    {
        head=p;
        head->next=NULL;
        head->prev=NULL;

    }
    else
    {
     p->next=head;
     head->prev=p;
     p->prev=NULL;
     head=p;
    }
}
void ins_end()
{
    NODE *p,*q;
    p=(NODE*)malloc(sizeof(NODE));
    printf("Enter the Data:\n");
    scanf("%d",&p->data);
    if(head==NULL)
    {
        head=p;
        head->next=NULL;
        head->prev=NULL;
    }
    else
    {
        q=head;
        while(q->next!=NULL)
        {
            q=q->next;
        }
        q->next=p;
        p->prev=q;
        p->next=NULL;
    }
}
void del_any_val()
{
    int key;
    NODE *p=head, *q;
    if(head==NULL)
    {
        printf("Empty List");
    }
    else
    {
        printf("Enter the value you want to delete\n");
        scanf("%d",&key);
        if(head->next==NULL && head->data==key)
        {
            printf("Deleted data is %d ",head->data);
            head=NULL;
        }
        else
        {
            q=p;
            while(p->next!=NULL && p->data != key)
            {
                q=p;
                p=p->next;
            }
            if(p->data==head->data && p->next !=NULL)
            {
                head=head->next;
                p->prev=NULL;
                p->next=NULL;
                printf("Deleted data is %d ",p->data);

            }
            else if(p->data==key && p->next==NULL)
            {
                q->next=NULL;
                p->prev=NULL;
                printf("Deleted data is %d", p->data);

            }
            else if(p->data==key && p->next!=NULL)
            {
                q->next=p->next;
                p->next->prev=q;
                p->next=NULL;
                p->prev=NULL;
                printf("Deleted data is %d",p->data);
            }
            else
                printf("Value does not exit");
        }
    }

}
void count()
{
    int i=0;
    NODE* p=head;
    if(head==NULL)
        printf("Empty List");
    else
    {
        while(p!=NULL)
        {
            i++;
            p=p->next;
        }
    }
    printf("No. of Nodes: %d",i);
}

void search()
{
    int key;
    int flag=0;
    NODE *p=head;
    printf("Enter the data you want to search\n");
    scanf("%d",&key);
    while(p->data!=key && p->next!=NULL)
     {
        p=p->next;
     }
     if(p->data==key && p->next!=NULL)
       flag=1;
     else if(p->data==key && p->next==NULL)
       flag=1;
    else
        flag=0;
    if(flag==1)
        printf("Value %d is found\n",key);
    else
        printf("Value %d not found\n",key);
}
void display()
{
    NODE *p=head;
    if(head==NULL)
        printf("Empty List\n");
    else
    {
        printf("The List is...\n");
        printf("  NULL<- ");
        for(p=head;p!=NULL;p=p->next)
            printf("  %d  ",p->data);
        printf(" ->NULL");
    }
}


/*void display()
{
    NODE *p=head;
    if(head==NULL)
        printf("Empty List");
    else
    {
        printf("The List is: \n");
        while(p!=NULL)
        {
            printf(" %d ",p->data );
            p=p->next;
        }
        printf("NULL");
    }
}
*/
